function Vnew = transform_mesh(A,V,T,C)
% this is our transform_mesh function which takes inputs A, V , T , and C. It computes
% the transformed vertex matrix Vnew, and uses trisurf to plot both the original and transformed
% objects on the same set of axes

% Use validateattributes to check for bad inputs. Check A, V, T, and C
validateattributes(A,{'numeric'},{'size',[3,3]},1);
validateattributes(V,{'numeric'},{'ncols',3},2);
validateattributes(T,{'numeric'},{'ncols',4,'integer','>=',1},3);
validateattributes(C,{'numeric'},{'ncols',3,'>=',0,'<=',1},4);

% apply the linear transformation represented by the matrix A to each vertex in V, and store the 
% results in the matrix Vnew. Use transpose because row of V represents a vertex in R3, not each column
Vnew = (A*V')';

% plot the new and original meshes
% use trisruf function which allows matlab to display the triangle meshes
trisurf(T(:,1:3),Vnew(:,1),Vnew(:,2),Vnew(:,3),T(:,4)); 
hold on;
trisurf(T(:,1:3),V(:,1),V(:,2),V(:,3),T(:,4),'EdgeColor','none','FaceAlpha',0.2);
% to assign specific colors we use the colormap function
hold off;
colormap(C);
% label axes
xlabel('X Axis');
ylabel('Y Axis'); 
zlabel('Z Axis');
axis equal;
end
