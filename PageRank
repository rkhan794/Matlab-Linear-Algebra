% Get user input for value of N and d
N = input('Enter a value for N: ');
d = input('Enter a value for d: ');  

% This is a random hyperlink matrix of size N x N, meaning the page connections will be
% random.
A = randi([0 1],N,N);
% Starting value is 1, increment is N+1, and end value is end. Matrix A is
% set to 0.
A(1:N+1:end) = 0;
% Divide each column by the sum of its entries, or if the column is all
% zeros then keep it all zeros by dividing by 1
H = A./max(1,sum(A,1));

% Create an identity matrix of the proper size
I = eye(size(H));
% Create a vector of ones of the proper size
one = ones(size(H,1),1);

% Solve the PageRank problem and store the results in a vector r
r = (I-d*H) \ ((1-d)*one);

% Create a vector containing the number of links going to each page 
links_to = sum(A);
% Create a vector containing the number of links going from each page 
links_from = sum(A,2);

% Create a results matrix with the following columns: 
%   1: page numbers
%   2: ranks
%   3: number of outgoing links
%   4: number of incoming links
results = [(1:N)' r (links_to)' links_from];

% Sort the rows of the results matrix by the ranks in descending order.  
% Look at the documentation of the "sortrows" function.
results_sorted = sortrows(results,2,'descend');

% Print the results to the screen.
fprintf('The rank of page %i is %.4f, with %i outgoing links and %i incoming links\n',results_sorted')

% Plot the number of outgoing and incoming links on a single plot, vs
% the rank of the corresponding page (i.e. the ranks should be on the 
% x-axis, and the number of links should be on the y-axis.  Use
% the sorted results matrix, so you can see if there is a correlation
% between the rank and either of the metrics. 
% takes in the whole 3rd column
outgoing_links = results_sorted(:,3);
% takes in the whole 4th column
incoming_links = results_sorted(:,4);
% takes in the whole 2nd column
plot(results_sorted(:,2),outgoing_links)
% hold on so the two graphs are on the same plot
hold on
% takes in the whole 2nd column
plot(results_sorted(:,2),incoming_links)
% Label the axes and add legend to clarify graph. 
xlabel ('Rank');
ylabel ('Number of links');
legend('outgoing links','incoming links')
grid on;
